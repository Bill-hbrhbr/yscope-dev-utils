version: "3"

includes:
  checksum: "checksum.yaml"
  remote: "remote.yaml"

set: ["u", "pipefail"]
shopt: ["globstar"]

tasks:
  # Generates `GENERATE_DIR` by copying `SOURCE_DIR` and then running Boost's bootstrap step.
  #
  # @param {string} SOURCE_DIR Project source directory.
  # @param {string} GENERATE_DIR Directory in which to generate `b2` and the build configuration.
  # @param {string} GENERATE_CHECKSUM_FILE Checksum file for `GENERATE_DIR`.
  # @param {string} INSTALL_PREFIX Path prefix of where the project should be installed.
  # @param {string[]} TARGETS Target libraries to build.
  # @param {string[]} [EXTRA_ARGS] Any additional arguments to pass to the generate command.
  generate:
    internal: true
    vars:
      EXTRA_ARGS:
        ref: "default (list) .EXTRA_ARGS"
    requires:
      vars: ["SOURCE_DIR", "GENERATE_DIR", "GENERATE_CHECKSUM_FILE", "INSTALL_PREFIX", "TARGETS"]
    sources:
      - "{{.SOURCE_DIR}}/**/*"
    generates:
      - "{{.GENERATE_CHECKSUM_FILE}}"
    deps:
      - task: "checksum:validate"
        vars:
          CHECKSUM_FILE: "{{.GENERATE_CHECKSUM_FILE}}"
          INCLUDE_PATTERNS:
            - "{{.GENERATE_DIR}}"
    cmds:
      - >-
        rm -rf "{{.GENERATE_DIR}}"
      - >-
        cp -R "{{.SOURCE_DIR}}" "{{.GENERATE_DIR}}"
      - >-
        pushd "{{.GENERATE_DIR}}";
        ./bootstrap.sh
        --prefix="{{.INSTALL_PREFIX}}"
        --exec-prefix="{{.INSTALL_PREFIX}}"
        --with-libraries={{(join "," .TARGETS)}}
        {{- range .EXTRA_ARGS}}
          "{{.}}"
        {{- end}};
        popd
      - task: "checksum:compute"
        vars:
          CHECKSUM_FILE: "{{.GENERATE_CHECKSUM_FILE}}"
          INCLUDE_PATTERNS:
            - "{{.GENERATE_DIR}}"

  # Runs Boost's b2 build and install step, and creates a CMake settings file. The caller must have
  # previously called `generate` on `SOURCE_DIR` (to produce the `GENERATE_DIR`) for this task to
  # succeed.
  #
  # @param {string} GENERATE_DIR Directory containing Boost's source and build files.
  # @param {string} BUILD_DIR Directory in which to build Boost.
  # @param {string} INSTALL_PREFIX Path prefix of where the project should be installed.
  # @param {string[]} [EXTRA_ARGS] Any additional arguments to pass to the build command.
  # @param {int} [JOBS] The maximum number of concurrent processes to use when building. If
  # omitted, the b2 default number is used. Before 1.76.0, the number was 1. Since 1.76.0, the
  # default is the number of cores.
  build-and-install:
    internal: true
    vars:
      EXTRA_ARGS:
        ref: "default (list) .EXTRA_ARGS"
      JOBS: >-
        {{default "" .JOBS}}
    requires:
      vars: ["GENERATE_DIR", "BUILD_DIR", "INSTALL_PREFIX"]
    cmds:
      - >-
        pushd "{{.GENERATE_DIR}}";
        ./b2
        install
        --build-dir="{{.BUILD_DIR}}"
        {{- range .EXTRA_ARGS}}
          "{{.}}"
        {{- end}}
        {{- if .JOBS}}
          "-j{{.JOBS}}"
        {{- end}};
        popd;

  # Downloads Boost from `URL` and installs Boost.
  #
  # General parameters
  # @param {string} [WORK_DIR={{.ROOT_DIR}}] Base directory in which to store the source, generate,
  # build, and install directories.
  # @param {string} [SOURCE_DIR={{.WORK_DIR}}/Boost-src] Directory in which to extract the tar
  # file.
  #
  # Download parameters
  # @param {string} FILE_SHA256 Content hash to verify the downloaded tar file against.
  # @param {string} URL
  #
  # Boost generate parameters
  # @param {string} [GENERATE_DIR={{.WORK_DIR}}/Boost-generate] Directory in which to generate the
  # project build files.
  # @param {string} [GENERATE_CHECKSUM_FILE={{.WORK_DIR}}/Boost-generate.md5] Checksum file for the
  # generate directory.
  # @param {string} [INSTALL_PREFIX={{.WORK_DIR}}/Boost-install] Path prefix of where the project
  # should be installed.
  # @param {string[]} [TARGETS] Target libraries to build.
  # @param {string[]} [GENERATE_ARGS] Any additional arguments to pass to the generate command.
  #
  # Boost build-and-install parameters
  # @param {string} [BUILD_DIR={{.WORK_DIR}}/Boost-build] Directory in which to build the project.
  # @param {int} [JOBS] The maximum number of concurrent processes to use when building. If
  # omitted, the b2 default number is used. Before 1.76.0, the number was 1. Since 1.76.0, the
  # default is the number of cores.
  # @param {string[]} [BUILD_AND_INSTALL_ARGS] Any additional arguments to pass to Boost's build
  # and install command.
  download-and-install:
    internal: true
    label: "{{.TASK}}:{{.URL}}-{{.INSTALL_PREFIX}}"
    vars:
      # General parameters
      BOOST_PACKAGE_NAME: "Boost"
      WORK_DIR: >-
        {{default .ROOT_DIR .WORK_DIR}}
      SOURCE_DIR: >-
        {{default (printf "%s/%s-src" .WORK_DIR .BOOST_PACKAGE_NAME) .SOURCE_DIR}}

      # Boost generate parameters
      GENERATE_DIR: >-
        {{default (printf "%s/%s-generate" .WORK_DIR .BOOST_PACKAGE_NAME) .GENERATE_DIR}}
      GENERATE_CHECKSUM_FILE: >-
        {{default (printf "%s.md5" .GENERATE_DIR) .GENERATE_CHECKSUM_FILE}}
      INSTALL_PREFIX: >-
        {{default (printf "%s/%s-install" .WORK_DIR .BOOST_PACKAGE_NAME) .INSTALL_PREFIX}}
      TARGETS:
        ref: "default (list) .TARGETS"
      GENERATE_ARGS:
        ref: "default (list) .GENERATE_ARGS"

      # Boost build-and-install parameters
      BUILD_DIR: >-
        {{default (printf "%s/%s-build" .WORK_DIR .BOOST_PACKAGE_NAME) .BUILD_DIR}}
      BUILD_AND_INSTALL_ARGS:
        ref: "default (list) .BUILD_AND_INSTALL_ARGS"
      JOBS: >-
        {{default "" .JOBS}}
    requires:
      vars: ["FILE_SHA256", "URL"]
    # TODO: use install directory checksum to properly decide if the task is up-to-date. Right now,
    # the task gets re-run for each unique task label.
    run: "when_changed"
    deps:
      - task: "remote:download-and-extract-tar"
        vars:
          FILE_SHA256: "{{.FILE_SHA256}}"
          OUTPUT_DIR: "{{.SOURCE_DIR}}"
          URL: "{{.URL}}"
    cmds:
      - task: "generate"
        vars:
          SOURCE_DIR: "{{.SOURCE_DIR}}"
          GENERATE_DIR: "{{.GENERATE_DIR}}"
          GENERATE_CHECKSUM_FILE: "{{.GENERATE_CHECKSUM_FILE}}"
          INSTALL_PREFIX: "{{.INSTALL_PREFIX}}"
          TARGETS:
            ref: ".TARGETS"
          EXTRA_ARGS:
            ref: ".GENERATE_ARGS"
      - task: "build-and-install"
        vars:
          GENERATE_DIR: "{{.GENERATE_DIR}}"
          BUILD_DIR: "{{.BUILD_DIR}}"
          INSTALL_PREFIX: "{{.INSTALL_PREFIX}}"
          EXTRA_ARGS:
            ref: ".BUILD_AND_INSTALL_ARGS"
          JOBS: "{{.JOBS}}"
